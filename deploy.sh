#!/bin/bash

# Configuraci√≥n del proyecto
PROJECT_ID="difed-contratos"
REGION="europe-west1"
SERVICE_NAME="contracts-backend"
IMAGE_NAME="contracts-backend"
TIMESTAMP=$(date +%s)

echo "üöÄ Inicio de deploy limpio para $SERVICE_NAME"

# 1Ô∏è‚É£ Borrar servicio actual para limpiar revisiones viejas
echo "üóëÔ∏è  Borrando servicio anterior (si existe)..."
gcloud run services delete $SERVICE_NAME --region $REGION --quiet || true

# 2Ô∏è‚É£ Construir imagen sin cache
echo "üî® Construyendo imagen con tag √∫nico: $TIMESTAMP"
docker build --no-cache -t gcr.io/$PROJECT_ID/$IMAGE_NAME:$TIMESTAMP .

# 3Ô∏è‚É£ Subir imagen al registro
echo "‚¨ÜÔ∏è  Subiendo imagen a GCR..."
docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$TIMESTAMP

# 4Ô∏è‚É£ Deployar en Cloud Run
echo "üöÄ Deployando en Cloud Run..."
gcloud run deploy $SERVICE_NAME \
  --image gcr.io/$PROJECT_ID/$IMAGE_NAME:$TIMESTAMP \
  --platform managed \
  --region $REGION \
  --allow-unauthenticated

# 5Ô∏è‚É£ Mostrar URL del servicio
SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region $REGION --format 'value(status.url)')
echo "‚úÖ Deploy exitoso! URL del servicio: $SERVICE_URL"

# 6Ô∏è‚É£ Mostrar √∫ltimos logs para confirmar versi√≥n
echo "üìú Logs recientes:"
gcloud run services logs read $SERVICE_NAME --region $REGION --limit 20

# 7Ô∏è‚É£ Probar endpoint principal autom√°ticamente
echo "üîé Verificando endpoint /contracts/upload..."
curl -s -X POST "$SERVICE_URL/contracts/upload" || echo "‚ö†Ô∏è Endpoint no respondi√≥ correctamente"
